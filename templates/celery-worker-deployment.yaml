apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app: celery-worker
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  name: celery-worker
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
        app: celery-worker
        release: "{{ .Release.Name }}"
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: celery-worker
        release: "{{ .Release.Name }}"
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      {{- include "kong-collectorapi.wait-for-db" . | nindent 6 }}
      containers:
      - args:
        - bash
        - -c
        - celery worker -l info -A collector.scheduler.celery --concurrency=1
        env:
        - name: CELERY_BROKER_URL
          value: "redis://:{{ .Values.redis.password }}@{{ .Values.redis.host }}:{{ .Values.redis.port }}/0"
        - name: COLLECTOR_DISCARD
          value: "True"
        - name: FLASK_APP
          value: /collector
        - name: KONG_HOST
          value: {{ .Values.kong.host }}
        - name: KONG_PORT
          value: "{{ .Values.kong.port }}"
        - name: SQLALCHEMY_DATABASE_URI
          value: "postgres://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ template "kong-collectorapi.postgresql.fullname" . }}:{{ .Values.postgresql.service.port }}/{{ .Values.postgresql.postgresqlDatabase }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        name: celery-worker
        resources: {}
      restartPolicy: Always
status: {}
